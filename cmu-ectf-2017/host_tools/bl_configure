#!/usr/bin/env python

"""

Copyright 2017 The MITRE Corporation

Modifications: Copyright 2017 Mark Horvath, Surbhi Shah, Tiemoko Ballo, Saurabh Sharma, Pouria Pezeshkian, Karthic Palaniappan

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
 
http://www.apache.org/licenses/LICENSE-2.0
 
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
or implied. See the License for the specific language governing
permissions and limitations under the License.


"""

"""
Bootloader Configuration Tool

This tool is responsible for configuring the bootloader after it is programmed.
"""
import argparse
import os
import serial
import shutil

FILE_PATH = os.path.abspath(__file__)

def generate_secret_file():
    """
    Compile all secrets from build and configuration and store to secret file.
    """
    # Get directory containing this file (host_tools).
    directory = os.path.dirname(FILE_PATH)

    # Copy secret build output to secret configure output.
    shutil.copyfile(os.path.join(directory, 'secret_build_output.txt'),
                    os.path.join(directory, 'secret_configure_output.txt'))

    # If there were additional secret parameters to output, the file could be
    # edited here.

def configure_bootloader(serial_port):
    """
    Configure bootloader using serial connection.
    """
    # If there were online configuration or checking of the bootloader using
    # the serial port it could be added here.
    pass


if __name__ == '__main__':
    # Argument parser setup.
    parser = argparse.ArgumentParser(description='Bootloader Config Tool')
    parser.add_argument('--port', help='Serial port to use for configuration.',
                        required=True)
    args = parser.parse_args()

    # Create serial connection using specified port.
    # serial_port = serial.Serial(args.port)

    # Do configuration and then close port.
    # try:
    #     configure_bootloader(serial_port)
    # finally:
    #     serial_port.close()

    # Generate secret file.
    generate_secret_file()

